{"openapi":"3.0.3","info":{"title":"Cryptshare REST API","description":"REST API of Cryptshare Server.","version":"1.8"},"servers":[{"url":"{protocol}://{host}/api","description":"The Cryptshare Server to use the API with.","variables":{"protocol":{"description":"The protocol of target Cryptshare Server.","default":"https"},"host":{"description":"The host of the target Cryptshare Server.","default":"localhost"}}}],"tags":[{"name":"client","description":"Operations to initiate a REST API consumer client."},{"name":"cors","description":"Operation to retrieve CORS status for the requesting origin."},{"name":"download","description":"Operations to download transfer information and files."},{"name":"imprint","description":"Operations to get the product imprint."},{"name":"language-packs","description":"Operations to retrieve language pack resources and information."},{"name":"logging","description":"Operations to retrieve logging settings and perform remote logging."},{"name":"password","description":"Operations for generating, validating passwords and viewing the password requirements"},{"name":"terms-of-use","description":"Operations to retrieve resources and information regarding the terms of use."},{"name":"transfer","description":"Operations to check existing transfers."},{"name":"transfer-policy","description":"Operations to retrieve information about the transfer policy."},{"name":"transfer-session","description":"Operations to create and access new transfers. Transfer sessions may only be modified using the same verification token they were created with."},{"name":"verification","description":"Operations to access user verification."}],"paths":{"/clients":{"get":{"tags":["client"],"summary":"Requests a generated client id that can be used for all operations that require a client id.","operationId":"getVerificationStatusUsingGET_2","parameters":[{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfClientId","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ProductKey).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/cors":{"get":{"tags":["cors"],"summary":"Returns the CORS status for the given product and requesting origin.","operationId":"getCorsStatusUsingGET_6","parameters":[{"name":"product-key","in":"path","description":"The product key of the product whose CORS status is requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"Origin","in":"header","description":"The origin header consists of scheme, host and port","required":true,"schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfCorsStatus","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required query parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/transfers/{transfer-id}":{"get":{"tags":["download"],"summary":"Returns the transfer information.","operationId":"getTransferInformationUsingGET_6","parameters":[{"name":"transfer-id","in":"path","description":"The transfer ID of the transfer whose information is requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"password","in":"query","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"style":"form","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-Password","in":"header","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTransferInfo","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. transferId).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"Unauthorized.\n * 3003 - Wrong transfer password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 2005 - Specified entity is locked/blocked (e.g. Transfer locked)\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists (e.g. transferId does not exist)\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"410":{"description":"The requested entity is deleted with this request.\n * 2006 - Transfer is deleted with this request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.\n * 5001 - Unsupported operation: QUICK\n * 5002 - Unsupported operation: eID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/transfers/{transfer-id}/checksums":{"get":{"tags":["download"],"summary":"Returns a CSV file download stream including the checksums of all files in the transfer. \nTo customize the locale of the checksums, the 'Accept-Language' header can be used.","operationId":"downloadChecksumsUsingGET_9","parameters":[{"name":"transfer-id","in":"path","description":"The transfer ID of the transfer whose information is requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"password","in":"query","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"style":"form","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-Password","in":"header","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"text/csv":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. transferId).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"Unauthorized.\n * 3003 - Wrong transfer password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 2005 - Specified entity is locked/blocked (e.g. Transfer locked)\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists (e.g. transferId does not exist)\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"410":{"description":"The requested entity is deleted with this request.\n * 2006 - Transfer is deleted with this request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.\n * 5001 - Unsupported operation: QUICK\n * 5002 - Unsupported operation: eID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/transfers/{transfer-id}/eml":{"get":{"tags":["download"],"summary":"Returns an EML file download stream including the confidential message with attachments embedded.","operationId":"downloadEmlUsingGET_6","parameters":[{"name":"transfer-id","in":"path","description":"The transfer ID of the transfer whose files are requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"password","in":"query","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"style":"form","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-Password","in":"header","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"name":"threshold","in":"query","description":"The threshold in megabytes for embedding attachments to the EML body.","required":false,"style":"form","schema":{"type":"integer","format":"int32","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. transferId).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"Unauthorized.\n * 3003 - Wrong transfer password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 2005 - Specified entity is locked/blocked (e.g. Transfer locked)\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists (e.g. transferId does not exist)\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"410":{"description":"The requested entity is deleted with this request.\n * 2006 - Transfer is deleted with this request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.\n * 5001 - Unsupported operation: QUICK\n * 5002 - Unsupported operation: eID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/transfers/{transfer-id}/files":{"get":{"tags":["download"],"summary":"Returns the transfer files information. Note that the `href` of the returned transfer files additionally includes the general parameters that are usually sent via headers for convenience. If the password was specified, it is also included in the `href`.","operationId":"getTransferFilesInformationUsingGET","parameters":[{"name":"transfer-id","in":"path","description":"The transfer ID of the transfer whose information is requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"password","in":"query","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"style":"form","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-Password","in":"header","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfListOfTransferFile","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. transferId).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"Unauthorized.\n * 3003 - Wrong transfer password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 2005 - Specified entity is locked/blocked (e.g. Transfer locked)\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists (e.g. transferId does not exist)\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"410":{"description":"The requested entity is deleted with this request.\n * 2006 - Transfer is deleted with this request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.\n * 5001 - Unsupported operation: QUICK\n * 5002 - Unsupported operation: eID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/transfers/{transfer-id}/files/{file-id}":{"get":{"tags":["download"],"summary":"Returns a file download stream for a transfer file.","operationId":"downloadSingleFileUsingGET_7","parameters":[{"name":"transfer-id","in":"path","description":"The transfer ID of the transfer whose file is requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"password","in":"query","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"style":"form","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-Password","in":"header","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"name":"file-id","in":"path","description":"The file id of the file to download, retrieved from the files endpoint.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. transferId, fileId).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"Unauthorized.\n * 3003 - Wrong transfer password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 2005 - Specified entity is locked/blocked (e.g. Transfer locked)\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists (e.g. transferId or fileId does not exist)\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"410":{"description":"The requested entity is deleted with this request.\n * 2006 - Transfer is deleted with this request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.\n * 5001 - Unsupported operation: QUICK\n * 5002 - Unsupported operation: eID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/transfers/{transfer-id}/zip":{"get":{"tags":["download"],"summary":"Returns a ZIP file download stream including all transfer files of this transfer. \nTo customize the locale of the checksums, the 'Accept-Language' header can be used.","operationId":"downloadZipUsingGET_6","parameters":[{"name":"transfer-id","in":"path","description":"The transfer ID of the transfer whose files are requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"password","in":"query","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"style":"form","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-Password","in":"header","description":"The URL encoded password for the transfer (can be specified by query parameter or header).","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"name":"include-checksum-file","in":"query","description":"If the checksum file from the checksum endpoint should be included in the ZIP file.","required":false,"style":"form","schema":{"type":"boolean","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/zip":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. transferId).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"Unauthorized.\n * 3003 - Wrong transfer password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 2005 - Specified entity is locked/blocked (e.g. Transfer locked)\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists (e.g. transferId does not exist)\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"410":{"description":"The requested entity is deleted with this request.\n * 2006 - Transfer is deleted with this request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.\n * 5001 - Unsupported operation: QUICK\n * 5002 - Unsupported operation: eID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/legal/imprint":{"get":{"tags":["imprint"],"summary":"Returns the imprint content.","operationId":"getImprintUsingGET_6","parameters":[{"name":"product-key","in":"path","description":"The product key of the product whose imprint is requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfImprint","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/language-packs":{"get":{"tags":["language-packs"],"summary":"Returns a list of installed language packs for the specified product.","operationId":"getAllLanguagePacksUsingGET_4","parameters":[{"name":"product-key","in":"path","description":"The product key of the product the language pack is requested for.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"major-version","in":"query","description":"The major-version of language packs. If specified, the returned list only contains language packs matching that version.","required":false,"style":"form","schema":{"type":"integer","format":"int32","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfListOfLanguagePack","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1005 - Invalid path variable (e.g. lp-Id).\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/language-packs/{lp-id}":{"get":{"tags":["language-packs"],"summary":"Returns a list of installed language packs for the specified product.","operationId":"getLanguagePackUsingGET_7","parameters":[{"name":"product-key","in":"path","description":"The product key of the product the language pack is requested for.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"lp-id","in":"path","description":"The ID of the specific language pack.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfLanguagePack","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid request parameter (e.g. productKey).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1005 - Invalid path variable (e.g. lp-Id).\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/language-packs/{lp-id}/*/**":{"get":{"tags":["language-packs"],"summary":"Returns a resource (stream) of certain resource of a language pack.","operationId":"getLanguagePackFileUsingGET_6","parameters":[{"name":"product-key","in":"path","description":"The product key of the product the language pack is requested for.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"lp-id","in":"path","description":"The ID of the specific language pack.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK. Content type may be different, depending on the requested resource.","content":{"*/*":{"schema":{"type":"string","format":"byte","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1005 - Invalid path variable (e.g. lp-Id).\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/logging":{"get":{"tags":["logging"],"summary":"Returns the logging settings for the given product and client.","operationId":"getLoggingSettingsUsingGET_4","parameters":[{"name":"product-key","in":"path","description":"The product key of the product the logging settings are requested for.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfLoggingSettings","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/password":{"get":{"tags":["password"],"summary":"Returns a generated, valid password.","operationId":"generatePasswordUsingGET_3","parameters":[{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfPasswordWrapper","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}},"post":{"tags":["password"],"summary":"Requests the validation of a given password against the current password requirements.","operationId":"validatePasswordUsingPOST_8","parameters":[{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordWrapper","exampleSetFlag":true},"exampleSetFlag":false}}},"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfPasswordValidationResult","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/password/requirements":{"get":{"tags":["password"],"summary":"Returns the currently active password requirements.","operationId":"getPasswordRequirementsUsingGET_7","parameters":[{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfListOfPasswordValidationRule","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/logs":{"post":{"tags":["logging"],"summary":"Creates a single log message on the Cryptshare Server for the purpose of remote logging.","operationId":"addLogEventUsingPOST_2","parameters":[{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"type":"array","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/LogEntry","exampleSetFlag":false}},"exampleSetFlag":false}}},"responses":{"200":{"description":"OK"},"201":{"description":"The resource was created successfully"},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n * 3004 - Remote logging not permitted.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/products/{product-key}/legal/terms-of-use":{"get":{"tags":["terms-of-use"],"summary":"Returns information about the provided terms of use.","operationId":"getUsageTermsUsingGET_9","parameters":[{"name":"product-key","in":"path","description":"The product key of the product whose terms of use are requested.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTermsOfUseInfo","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2003 - Specified entity does not exists\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/users/{email-address}/transfers":{"get":{"tags":["transfer-controller"],"summary":"Returns a list of transfers for this sender. The latest transfers are shown first. The transfer only contain the ID, the state, a link to the details.","operationId":"getAllTransfersUsingGET","parameters":[{"name":"email-address","in":"path","description":"email-address","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"page-size","in":"query","description":"Size of the page. Max number of transfers returned per page. Default page size: 10, maximum page size: 100.","required":false,"style":"form","schema":{"type":"integer","format":"int32","exampleSetFlag":true}},{"name":"page","in":"query","description":"Pagination index, 1-indexed. Default page: 1.","required":false,"style":"form","schema":{"type":"integer","format":"int32","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfListOfTransferBasicInfoDto","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfers/{tracking-id}":{"get":{"tags":["transfer"],"summary":"Returns the details of a given transfer for its sender, including processing errors.","operationId":"getTransferDetailsUsingGET_8","parameters":[{"name":"email-address","in":"path","description":"User that sent this transfer.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTransferStatus","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfer-policy":{"post":{"tags":["transfer-policy"],"summary":"Requests the policy for the user as sender and the given recipients.","operationId":"requestPolicyUsingPOST_7","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferPolicyRequest","exampleSetFlag":true},"exampleSetFlag":false}}},"responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTransferPolicyResult","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, email-address).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3010 - Email address and (possibly) IP address of the sender is rejected by policy.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfer-sessions":{"post":{"tags":["transfer-session"],"summary":"Creates a new transfer session.\nInitial values for the sender and recipient languages can be set by using the 'Accept-Language' header.","operationId":"createSessionUsingPOST_3","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferSessionCreationOptions","exampleSetFlag":true},"exampleSetFlag":false}}},"responses":{"201":{"description":"Created the transfer session. The 'Location' header will contain the URL of the created session."},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n * 3010 - Sender rejected by policy.\n * 3011 - Recipient and sender combination rejected by policy.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfer-sessions/{tracking-id}":{"get":{"tags":["transfer-session"],"summary":"Returns an existing transfer session. Note that all properties will be present.","operationId":"getSessionUsingGET_9","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTransferSession","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]},"post":{"tags":["transfer-session"],"summary":"Submits an existing transfer session. Returns the location where the finalized transfer can be inspected","operationId":"finalizeSessionUsingPOST_9","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"201":{"description":"Created."},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"409":{"description":"Validation of parameters failed.\n * 2001 - Some given values cannot be applied due to transfer rule restrictions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]},"delete":{"tags":["transfer-session"],"summary":"Deletes an existing transfer session.","operationId":"deleteSessionUsingDELETE_5","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"204":{"description":"No Content.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ResponseOfVoid","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"401":{"description":"The client is not allowed to perform the requested operation.\n * 3002 - The provided verification token differs from the verification token used for patching the transfer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]},"patch":{"tags":["transfer-session"],"summary":"Edits an existing transfer session.","operationId":"editSessionUsingPATCH_2","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferSessionPatchable","exampleSetFlag":true},"exampleSetFlag":false}}},"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTransferSession","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"409":{"description":"Validation of parameters failed.\n * 2001 - Some given values cannot be applied due to transfer rule restrictions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfer-sessions/{tracking-id}/files":{"post":{"tags":["transfer-session"],"summary":"Creates a new transfer file.","operationId":"createFileUsingPOST_6","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferFileCreationOptionsReq","exampleSetFlag":true},"exampleSetFlag":false}}},"responses":{"201":{"description":"Created the transfer file. The 'Location' header will contain the URL of the created file.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfTransferFileCreationOptions","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n * 3011 - Recipient and sender combination rejected by policy.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfer-sessions/{tracking-id}/files/{file-id}":{"delete":{"tags":["transfer-session"],"summary":"Deletes an existing file from a transfer session.","operationId":"deleteFileUsingDELETE_6","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"file-id","in":"path","description":"The file ID to delete.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"204":{"description":"No Content.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ResponseOfVoid","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n ","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/transfer-sessions/{tracking-id}/files/{file-id}/content":{"put":{"tags":["transfer-session"],"summary":"Puts raw binary data to a transfer file. If data was already written to this file, it is replaced. Clients may want to stream the data if fitting.","operationId":"putFileUsingPUT_2","parameters":[{"name":"email-address","in":"path","description":"User to send as.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"tracking-id","in":"path","description":"The tracking ID.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"file-id","in":"path","description":"The file ID to write data for.","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"Ok."},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, emailAddress).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n * 3011 - Recipient and sender combination rejected by policy.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"security":[{"verification":[]}]}},"/users/{email-address}/verification":{"get":{"tags":["verification"],"summary":"Returns if an active verification for the provided mail exists, and what verification methods are available.","operationId":"getVerificationStatusUsingGET_12","parameters":[{"name":"email-address","in":"path","description":"email-address","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"name":"X-CS-VerificationToken","in":"header","description":"The verification token to check.","required":false,"schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfVerificationStatus","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, mail).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n * 3002 - Invalid verification data.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}},"/users/{email-address}/verification/code/email":{"post":{"tags":["verification"],"summary":"Requests a sender verification verification code to be sent via mail. Note that repeated access in quick succession may cause rate limiting. Note that previously created verification codes may be invalidated. \nTo customize the locale of the mail, the 'Accept-Language' header can be used.","operationId":"generateVerificationCodeUsingPOST_4","parameters":[{"name":"email-address","in":"path","description":"email-address","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"responses":{"200":{"description":"OK."},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, mail).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"429":{"description":"Too Many Requests.\n  * 2007 - Request rejected because there are too many requests at the same time","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}}}}},"/users/{email-address}/verification/token":{"post":{"tags":["verification"],"summary":"Creates a verification token. Note that repeated access in quick succession may cause rate limiting.","operationId":"createVerificationTokenUsingPOST_5","parameters":[{"name":"email-address","in":"path","description":"email-address","required":true,"style":"simple","schema":{"type":"string","exampleSetFlag":true}},{"$ref":"#/components/parameters/ClientId"},{"$ref":"#/components/parameters/MajorVersion"},{"$ref":"#/components/parameters/MinimumMinorApiVersion"},{"$ref":"#/components/parameters/ProductKey"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestVerificationBody","exampleSetFlag":true},"exampleSetFlag":false}}},"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseOfVerificationToken","exampleSetFlag":true},"exampleSetFlag":false}}},"400":{"description":"A required parameter was not specified or a parameter had an invalid content.\n * 1002 - Missing required request parameter/header (e.g. X-CS-ClientId).\n * 1004 - Invalid request parameter/header value (expected, but wrong format/syntax) (e.g. unknown product key).\n * 1005 - Invalid path variable (e.g. productKey, mail).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"403":{"description":"The client is not allowed to perform the requested operation.\n * 3001 - Product not licensed.\n * 3002 - Invalid verification data.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"404":{"description":"The requested resource was not found.\n * 1006 - Specified endpoint does not exist.\n * 2004 - Specified version is not supported.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"429":{"description":"Too Many Requests.\n  * 2007 - Request rejected because there are too many requests at the same time","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"501":{"description":"Server error occurred.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":true},"exampleSetFlag":false}}},"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}}}}},"components":{"schemas":{"ClientId":{"title":"ClientId","type":"object","properties":{"clientId":{"type":"string","description":"The ID that uniquely identifies the requesting client. Can also be specified by query parameter (client-id). Should be treated as confidential.","exampleSetFlag":true}},"exampleSetFlag":true},"CorsStatus":{"title":"CorsStatus","type":"object","properties":{"active":{"type":"boolean","description":"Specifies whether CORS is active or not for requesting origin","example":true,"exampleSetFlag":true}},"exampleSetFlag":true},"Details":{"title":"Details","type":"object","exampleSetFlag":true},"DownloadDto":{"title":"DownloadDto","type":"object","properties":{"downloadDate":{"type":"string","description":"The date of the download. ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"retrievalMethod":{"type":"string","description":"The method how the file was retrieved: Downloaded or viewed in Content Viewer.","exampleSetFlag":true,"enum":["DOWNLOADED","VIEWED"]}},"exampleSetFlag":true},"EidSecurityMode":{"title":"EidSecurityMode","type":"object","properties":{"config":{"description":"Configuration of the security mode. Depending on the type (see 'name' property) this is one of OneTimePasswordSecurityModeConfig (for 'ONE_TIME_PASSWORD'), QuickSecurityModeConfig (for 'QUICK'), or EidSecurityModeConfig (for 'EID').","$ref":"#/components/schemas/EidSecurityModeConfig","exampleSetFlag":true},"name":{"type":"string","description":"Name of the security mode.","exampleSetFlag":true,"enum":["EID","ONE_TIME_PASSWORD","QUICK"]}},"exampleSetFlag":true},"EidSecurityModeConfig":{"title":"EidSecurityModeConfig","type":"object","exampleSetFlag":true},"Error":{"title":"Error","type":"object","properties":{"errorCode":{"type":"integer","description":"Proprietary Cryptshare Server error code.","format":"int32","exampleSetFlag":true},"errorMessage":{"type":"string","description":"Short description of the error code in English.","exampleSetFlag":true}},"exampleSetFlag":true},"FailedRecipient":{"title":"FailedRecipient","type":"object","properties":{"emailAddress":{"type":"string","description":"The email address of the failed recipient.","example":"abc.def@example.com","exampleSetFlag":true},"reason":{"type":"string","description":"The reason of the denial of the recipient. Currently, only 'POLICY_MISMATCH' is supported.","exampleSetFlag":true,"enum":["POLICY_MISMATCH"]}},"exampleSetFlag":true},"FileDownloadDto":{"title":"FileDownloadDto","type":"object","properties":{"downloads":{"type":"array","description":"The list of downloads of this file.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/DownloadDto","exampleSetFlag":false}},"id":{"type":"string","description":"The file ID.","exampleSetFlag":true}},"exampleSetFlag":true},"FileStatusDto":{"title":"FileStatusDto","type":"object","properties":{"id":{"type":"string","description":"The file ID.","exampleSetFlag":true},"removalCause":{"type":"string","description":"A formatted text with details why this file was removed. May be null.","exampleSetFlag":true},"removed":{"type":"boolean","description":"If this file was removed.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"Imprint":{"title":"Imprint","type":"object","properties":{"content":{"type":"string","description":"Either an URL pointing to the imprint (type 'link') or the content itself (type 'html').","example":"<h1>Imprint</h1><p>Lorem ipsum...</p>","exampleSetFlag":true},"type":{"type":"string","description":"Specifies value type of the content property..","example":"html","exampleSetFlag":true,"enum":["html","link"]}},"exampleSetFlag":true},"LanguagePack":{"title":"LanguagePack","type":"object","properties":{"displayName":{"type":"string","description":"The display name of the language, in the respective language.","example":"English (US)","exampleSetFlag":true},"href":{"type":"string","description":"The absolute path to the language pack resources.","example":"/api/products/api.rest/language-packs/en-US_2","exampleSetFlag":true},"id":{"type":"string","description":"Id of the language pack, contains locale and major version.","example":"en-US_2","exampleSetFlag":true},"lastChangeTimestamp":{"type":"string","description":"The date and time of the last update of the language pack, or null, if it was never updated. Format: ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"locale":{"type":"string","description":"IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en-US","exampleSetFlag":true},"version":{"type":"string","description":"The version of the language pack, consisting of major and minor version.","example":"2.1","exampleSetFlag":true}},"exampleSetFlag":true},"LogEntry":{"title":"LogEntry","type":"object","properties":{"level":{"type":"string","description":"Assumes a severity ordering as specified by RFC 5424.","exampleSetFlag":true,"enum":["debug","error","info","trace","warn"]},"message":{"type":"string","description":"The log message.","exampleSetFlag":true},"timestamp":{"type":"string","description":"ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true}},"exampleSetFlag":true},"LoggingSettings":{"title":"LoggingSettings","type":"object","properties":{"level":{"type":"string","description":"Assumes a severity ordering as specified by RFC 5424.","exampleSetFlag":true,"enum":["debug","error","info","trace","warn"]},"remoteLoggingEnabled":{"type":"boolean","description":"Specifies whether the requesting client should send its log entries to the Cryptshare Server.","example":true,"exampleSetFlag":true}},"exampleSetFlag":true},"OneTimePasswordSecurityMode":{"title":"OneTimePasswordSecurityMode","type":"object","properties":{"config":{"description":"Configuration of the security mode. Depending on the type (see 'name' property) this is one of OneTimePasswordSecurityModeConfig (for 'ONE_TIME_PASSWORD'), QuickSecurityModeConfig (for 'QUICK'), or EidSecurityModeConfig (for 'EID').","$ref":"#/components/schemas/OneTimePasswordSecurityModeConfig","exampleSetFlag":true},"name":{"type":"string","description":"Name of the security mode.","exampleSetFlag":true,"enum":["EID","ONE_TIME_PASSWORD","QUICK"]}},"exampleSetFlag":true},"OneTimePasswordSecurityModeConfig":{"title":"OneTimePasswordSecurityModeConfig","type":"object","properties":{"allowedPasswordModes":{"type":"array","description":"Password modes allowed for one time passwords.","example":"[\"NONE\", \"MANUAL\", \"GENERATED\"]","exampleSetFlag":true,"items":{"type":"string","exampleSetFlag":false,"enum":["GENERATED","MANUAL","NONE"]}}},"exampleSetFlag":true},"PasswordValidationResult":{"title":"PasswordValidationResult","type":"object","properties":{"rulesNotFulfilled":{"type":"array","description":"List of rules that are not fulfilled by the given password","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/PasswordValidationRule","exampleSetFlag":false}},"valid":{"type":"boolean","description":"Whether the given password is valid.","example":false,"exampleSetFlag":true}},"description":"Results of the validation of a given password","exampleSetFlag":true},"PasswordValidationRule":{"title":"PasswordValidationRule","type":"object","properties":{"details":{"description":"Details of the rule.","$ref":"#/components/schemas/Details","exampleSetFlag":true},"name":{"type":"string","description":"Name of the rule.","exampleSetFlag":true}},"description":"Represents a rule a password has to fulfill to be valid","exampleSetFlag":true},"PasswordWrapper":{"title":"PasswordWrapper","type":"object","properties":{"password":{"type":"string","exampleSetFlag":true}},"exampleSetFlag":true},"QuickSecurityMode":{"title":"QuickSecurityMode","type":"object","properties":{"config":{"description":"Configuration of the security mode. Depending on the type (see 'name' property) this is one of OneTimePasswordSecurityModeConfig (for 'ONE_TIME_PASSWORD'), QuickSecurityModeConfig (for 'QUICK'), or EidSecurityModeConfig (for 'EID').","$ref":"#/components/schemas/QuickSecurityModeConfig","exampleSetFlag":true},"name":{"type":"string","description":"Name of the security mode.","exampleSetFlag":true,"enum":["EID","ONE_TIME_PASSWORD","QUICK"]}},"exampleSetFlag":true},"QuickSecurityModeConfig":{"title":"QuickSecurityModeConfig","type":"object","properties":{"allowedPasswordModes":{"type":"array","description":"Password modes allowed for invitational (initial) QUICK transfers.","example":"[\"NONE\", \"MANUAL\", \"GENERATED\"]","exampleSetFlag":true,"items":{"type":"string","exampleSetFlag":false,"enum":["GENERATED","MANUAL","NONE"]}},"defaultIfEstablished":{"type":"boolean","description":"Specifies whether the client should set QUICK as default security mode if the sender has an already established QUICK connection with all recipients.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"Recipient":{"title":"Recipient","required":["mail"],"type":"object","properties":{"mail":{"type":"string","description":"The recipient email address.","exampleSetFlag":true}},"exampleSetFlag":true},"RecipientStatusDto":{"title":"RecipientStatusDto","type":"object","properties":{"downloadUrl":{"type":"string","description":"The URL this recipient can use to access this transfer. This URL is meant to be used by a real user, not an API. This field is set to null only if the password mode is none and a different verification token is used than the one when this transfer was created with.","exampleSetFlag":true},"fileDownloads":{"uniqueItems":true,"type":"array","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/FileDownloadDto","exampleSetFlag":false}},"id":{"type":"string","description":"The recipient transfer ID.","exampleSetFlag":true},"mail":{"type":"string","description":"The recipient email address.","exampleSetFlag":true},"notificationFailed":{"type":"boolean","description":"If notification of this recipient failed.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"Recipients":{"title":"Recipients","type":"object","properties":{"bcc":{"uniqueItems":true,"type":"array","description":"The 'BCC' recipients.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/Recipient","exampleSetFlag":false}},"cc":{"uniqueItems":true,"type":"array","description":"The 'CC' recipients.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/Recipient","exampleSetFlag":false}},"to":{"uniqueItems":true,"type":"array","description":"The 'To' recipients.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/Recipient","exampleSetFlag":false}}},"description":"The recipients of the transfer grouped by to, cc and bcc.","exampleSetFlag":true},"RequestVerificationBody":{"title":"RequestVerificationBody","type":"object","properties":{"verificationCode":{"type":"string","description":"Code that confirms this verification. Must be present unless requesting a verification using client-id.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfClientId":{"title":"ResponseOfClientId","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/ClientId","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfCorsStatus":{"title":"ResponseOfCorsStatus","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/CorsStatus","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfImprint":{"title":"ResponseOfImprint","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/Imprint","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfLanguagePack":{"title":"ResponseOfLanguagePack","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/LanguagePack","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfListOfLanguagePack":{"title":"ResponseOfListOfLanguagePack","type":"object","properties":{"data":{"type":"array","description":"Main data of the response.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/LanguagePack","exampleSetFlag":false}},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfListOfPasswordValidationRule":{"title":"ResponseOfListOfPasswordValidationRule","type":"object","properties":{"data":{"type":"array","description":"Main data of the response.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/PasswordValidationRule","exampleSetFlag":false}},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfListOfTransferBasicInfoDto":{"title":"ResponseOfListOfTransferBasicInfoDto","type":"object","properties":{"data":{"type":"array","description":"Main data of the response.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/TransferBasicInfoDto","exampleSetFlag":false}},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfListOfTransferFile":{"title":"ResponseOfListOfTransferFile","type":"object","properties":{"data":{"type":"array","description":"Main data of the response.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/TransferFile","exampleSetFlag":false}},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfLoggingSettings":{"title":"ResponseOfLoggingSettings","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/LoggingSettings","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfPasswordValidationResult":{"title":"ResponseOfPasswordValidationResult","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/PasswordValidationResult","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfPasswordWrapper":{"title":"ResponseOfPasswordWrapper","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/PasswordWrapper","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfTermsOfUseInfo":{"title":"ResponseOfTermsOfUseInfo","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/TermsOfUseInfo","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfTransferFileCreationOptions":{"title":"ResponseOfTransferFileCreationOptions","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/TransferFileCreationOptionsRes","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfTransferInfo":{"title":"ResponseOfTransferInfo","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/TransferInfo","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfTransferPolicyResult":{"title":"ResponseOfTransferPolicyResult","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/TransferPolicyResult","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfTransferSession":{"title":"ResponseOfTransferSession","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/TransferSession","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfTransferStatus":{"title":"ResponseOfTransferStatus","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/TransferStatus","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfVerificationStatus":{"title":"ResponseOfVerificationStatus","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/VerificationStatus","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfVerificationToken":{"title":"ResponseOfVerificationToken","type":"object","properties":{"data":{"description":"Main data of the response.","$ref":"#/components/schemas/VerificationToken","exampleSetFlag":true},"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"ResponseOfVoid":{"title":"ResponseOfVoid","type":"object","properties":{"meta":{"type":"object","description":"Additional response metadata.","exampleSetFlag":true}},"exampleSetFlag":true},"Sender":{"title":"Sender","type":"object","properties":{"name":{"type":"string","description":"The sender name.","exampleSetFlag":true},"phone":{"type":"string","description":"The sender phone.","exampleSetFlag":true}},"description":"The sender of the transfer (without email).","exampleSetFlag":true},"SenderStatusDto":{"title":"SenderStatusDto","type":"object","properties":{"email":{"type":"string","description":"The sender email address.","exampleSetFlag":true},"notificationFailed":{"type":"boolean","description":"If notification of the sender failed.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"StatusDto":{"title":"StatusDto","type":"object","properties":{"emlCreationFailed":{"type":"boolean","description":"If the creation of the EML file failed.","example":false,"exampleSetFlag":true},"files":{"uniqueItems":true,"type":"array","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/FileStatusDto","exampleSetFlag":false}},"recipients":{"uniqueItems":true,"type":"array","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/RecipientStatusDto","exampleSetFlag":false}},"sender":{"$ref":"#/components/schemas/SenderStatusDto","exampleSetFlag":true},"state":{"type":"string","description":"The state of the transfer.","exampleSetFlag":true,"enum":["ACTIVE","DELETED_BY_ADMIN","DELETED_BY_EXPIRATION","DELETED_BY_REVOCATION","DELETED_BY_SECURITY","FAILED","PROCESSING"]},"warnings":{"type":"boolean","description":"If any warnings were encountered. This could be for example files that were removed.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"StreamingResponseBody":{"title":"StreamingResponseBody","type":"object","exampleSetFlag":true},"TermsOfUse":{"title":"TermsOfUse","type":"object","properties":{"content":{"type":"string","description":"Either an URL pointing to the terms of use (type 'link') or the content of the terms of use itself (type 'html')","example":"<p>The terms of use!</p>","exampleSetFlag":true},"locale":{"type":"string","description":"IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en-US","exampleSetFlag":true},"title":{"type":"string","description":"Title of the terms of use, in the respective language.","example":"Cryptshare at ACME Inc., Terms of Use","exampleSetFlag":true},"type":{"type":"string","description":"Specifies the value type of the content property.","example":"html","exampleSetFlag":true,"enum":["html","link"]}},"exampleSetFlag":true},"TermsOfUseInfo":{"title":"TermsOfUseInfo","type":"object","properties":{"active":{"type":"boolean","description":"Specifies whether terms of use are active or not. Active terms of use need to be accepted by users before first usage of the product or whenever terms are changed.","example":true,"exampleSetFlag":true},"lastChangeTimestamp":{"type":"string","description":"The date and time of the last change of the terms of use, or null, if the terms of use have never been changed. Format: ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"terms":{"type":"array","description":"The terms of use in specific languages.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/TermsOfUse","exampleSetFlag":false}}},"exampleSetFlag":true},"TransferBasicInfoDto":{"title":"TransferBasicInfoDto","type":"object","properties":{"href":{"type":"string","description":"The absolute path to the transfer.","exampleSetFlag":true},"recipients":{"uniqueItems":true,"type":"array","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/RecipientStatusDto","exampleSetFlag":false}},"state":{"type":"string","description":"The state of the transfer.","exampleSetFlag":true,"enum":["ACTIVE","DELETED_BY_ADMIN","DELETED_BY_EXPIRATION","DELETED_BY_REVOCATION","DELETED_BY_SECURITY","FAILED","PENDING","PROCESSING","UNKNOWN"]},"trackingId":{"type":"string","description":"The tracking ID.","exampleSetFlag":true}},"exampleSetFlag":true},"TransferFile":{"title":"TransferFile","type":"object","properties":{"checksum":{"type":"string","description":"The checksum of the file.","example":"737b6a930368b34c9ef9022ab088ac9b0b7abf8ef9046929c5d2fea3f87e7d15","exampleSetFlag":true},"fileName":{"type":"string","description":"The name of the file.","example":"Invoice.pdf","exampleSetFlag":true},"href":{"type":"string","description":"The absolute path to the transfer file.","exampleSetFlag":true},"id":{"type":"string","description":"The ID of this file.","example":"a58dFp1Tr7","exampleSetFlag":true},"size":{"type":"integer","description":"The file size in bytes.","format":"int64","example":13987,"exampleSetFlag":true}},"exampleSetFlag":true},"TransferFileCreationOptionsReq":{"title":"TransferFileCreationOptionsReq","required":["fileName","size"],"type":"object","properties":{"checksum":{"type":"string","description":"The checksum of the file. This may be provided to check the file integrity during processing. For the used algorithm, see the corresponding transfer session.","example":"737b6a930368b34c9ef9022ab088ac9b0b7abf8ef9046929c5d2fea3f87e7d15","exampleSetFlag":true},"fileName":{"type":"string","description":"The name of the file.","exampleSetFlag":true},"size":{"type":"integer","description":"The file size in bytes. This may be provided to allow the server to give early feedback regarding exceeded size limits.","format":"int64","exampleSetFlag":true}},"exampleSetFlag":true},"TransferFileCreationOptionsRes":{"title":"TransferFileCreationOptionsRes","required":["fileId"],"type":"object","properties":{"fileId":{"type":"string","description":"The ID of the file.","exampleSetFlag":true}},"exampleSetFlag":true},"TransferInfo":{"title":"TransferInfo","type":"object","properties":{"checksumAlgorithm":{"type":"string","description":"The checksum algorithm used for checksum generation.","example":"SHA-256","exampleSetFlag":true},"totalSize":{"type":"integer","description":"The total file size in bytes.","format":"int64","example":13987,"exampleSetFlag":true}},"exampleSetFlag":true},"TransferNotificationMessage":{"title":"TransferNotificationMessage","type":"object","properties":{"body":{"type":"string","description":"The body of the transfer notification. May contain HTML.","exampleSetFlag":true},"subject":{"type":"string","description":"The subject of the transfer notification.","exampleSetFlag":true}},"exampleSetFlag":true},"TransferOneTimePasswordSecurityModeConfigReq":{"title":"TransferOneTimePasswordSecurityModeConfigReq","type":"object","properties":{"password":{"type":"string","description":"The password for the transfer.","exampleSetFlag":true},"passwordMode":{"type":"string","description":"The password mode to use. Note that if 'GENERATED' is used, the password is calculated by the server.","exampleSetFlag":true,"enum":["GENERATED","MANUAL","NONE"]}},"exampleSetFlag":true},"TransferOneTimePasswordSecurityModeConfigRes":{"title":"TransferOneTimePasswordSecurityModeConfigRes","type":"object","properties":{"password":{"type":"string","description":"The password for the transfer.","exampleSetFlag":true},"passwordMode":{"type":"string","description":"The password mode to use. Note that if 'GENERATED' is used, the password is calculated by the server.","exampleSetFlag":true,"enum":["GENERATED","MANUAL","NONE"]}},"exampleSetFlag":true},"TransferOneTimePasswordSecurityModeReq":{"title":"TransferOneTimePasswordSecurityModeReq","type":"object","properties":{"config":{"description":"The configuration of the security mode.","$ref":"#/components/schemas/TransferOneTimePasswordSecurityModeConfigReq","exampleSetFlag":true},"name":{"type":"string","description":"The identifier for this security mode.","exampleSetFlag":true,"enum":["ONE_TIME_PASSWORD"]}},"exampleSetFlag":true},"TransferOneTimePasswordSecurityModeRes":{"title":"TransferOneTimePasswordSecurityModeRes","type":"object","properties":{"config":{"description":"The configuration of the security mode.","$ref":"#/components/schemas/TransferOneTimePasswordSecurityModeConfigRes","exampleSetFlag":true},"name":{"type":"string","description":"The identifier for this security mode.","exampleSetFlag":true,"enum":["ONE_TIME_PASSWORD"]}},"exampleSetFlag":true},"TransferPolicyRequest":{"title":"TransferPolicyRequest","required":["recipients"],"type":"object","properties":{"recipients":{"type":"array","exampleSetFlag":true,"items":{"type":"string","exampleSetFlag":false}}},"exampleSetFlag":true},"TransferPolicyResult":{"title":"TransferPolicyResult","type":"object","properties":{"allowed":{"type":"boolean","description":"Whether a transfer with the requested sender-recipient combination would be allowed or not. Please note that if the user isn't allowed as sender at all, the request would result in a error response instead.","example":true,"exampleSetFlag":true},"failedRecipients":{"uniqueItems":true,"type":"array","description":"List of all recipients to which the given sender is not allowed to perform a transfer. This is only set if the transfer would not be allowed.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/FailedRecipient","exampleSetFlag":false}},"settings":{"description":"The evaluated policy settings of the matching policy rules. This is only set the transfer would be allowed at all.","$ref":"#/components/schemas/TransferPolicySettings","exampleSetFlag":true}},"exampleSetFlag":true},"TransferPolicySettings":{"title":"TransferPolicySettings","type":"object","properties":{"confidentialMessageAllowed":{"type":"boolean","description":"Specifies whether a confidential message can be part of the transfer or not.","example":false,"exampleSetFlag":true},"confidentialMessageRequired":{"type":"boolean","description":"Specifies whether a confidential message has to be part of the transfer or not.","example":false,"exampleSetFlag":true},"maxRetentionPeriod":{"type":"integer","description":"Max. number of days the transfer is retrievable, starting at the transfer's provision time.","format":"int64","example":30,"exampleSetFlag":true},"maxTotalSize":{"type":"integer","description":"Max. total size of all files in bytes.","format":"int64","example":2147483648,"exampleSetFlag":true},"recipientNotificationEditable":{"type":"boolean","description":"Specifies whether the recipient notification can be edited or not.","example":false,"exampleSetFlag":true},"securityModes":{"type":"array","description":"List of available security modes (OneTimePasswordSecurityMode, QuickSecurityMode, EidSecurityMode), ordered by priority. The first element is meant to be set as default by the client.","exampleSetFlag":true,"items":{"$ref":"Error-ModelName{namespace='com.cryptshare.server.api.rest.ui.v1.users.transfers', name='SecurityModeDtoOfSecurityModeConfigDto'}","exampleSetFlag":false}},"sendDownloadNotificationsChangeable":{"type":"boolean","description":"Specifies whether the sendDownloadNotificationsDefault setting is changeable or not.","example":false,"exampleSetFlag":true},"sendDownloadNotificationsDefault":{"type":"boolean","description":"Default setting for sending download notifications on file retrieval.","example":false,"exampleSetFlag":true},"showFileNamesChangeable":{"type":"boolean","description":"Specifies whether the showFileNamesDefault setting is changeable or not.","example":false,"exampleSetFlag":true},"showFileNamesDefault":{"type":"boolean","description":"Default setting for showing file names in notifications and logs.","example":false,"exampleSetFlag":true},"showZipFileContentDefault":{"type":"boolean","description":"Default setting for showing file names within ZIP files in notifications and logs. This only has an effect if file names are shown in general.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"TransferSecurityModeOfobject":{"title":"TransferSecurityModeOfobject","type":"object","properties":{"config":{"type":"object","description":"The configuration of the security mode.","exampleSetFlag":true},"name":{"type":"string","description":"The identifier for this security mode.","exampleSetFlag":true,"enum":["ONE_TIME_PASSWORD"]}},"description":"Security mode. Possible implementations are: 'TransferOneTimePasswordSecurityMode'","exampleSetFlag":true},"TransferSession":{"title":"TransferSession","type":"object","properties":{"classificationId":{"type":"string","description":"An optional ID for the type of classification used for this transfer.","exampleSetFlag":true},"confidentialMessageFileId":{"type":"string","description":"The file ID of the confidential message. May be null.","exampleSetFlag":true},"expirationDate":{"type":"string","description":"The expiration date of the transfer. ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"fileChecksumAlgorithm":{"type":"string","description":"The name of the hashing algorithm that will be used for files in this transfer.","example":"SHA256","exampleSetFlag":true},"files":{"uniqueItems":true,"type":"array","description":"The files of this transfer.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/TransferSessionFile","exampleSetFlag":false}},"notificationMessage":{"description":"The notification mail that will be sent to the recipients.","$ref":"#/components/schemas/TransferNotificationMessage","exampleSetFlag":true},"recipientLanguage":{"type":"string","description":"The recipient language. IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en","exampleSetFlag":true},"recipients":{"$ref":"#/components/schemas/Recipients","exampleSetFlag":true},"securityMode":{"description":"The security mode for this transfer.","$ref":"#/components/schemas/TransferSecurityModeOfobject","exampleSetFlag":true},"sendDownloadNotifications":{"type":"boolean","description":"If notification mails should be sent to the sender when a file is downloaded.","example":false,"exampleSetFlag":true},"sendDownloadSummary":{"type":"boolean","description":"If a summary notification mail should be sent to the sender the transfer expires.","example":false,"exampleSetFlag":true},"sendRecipientNotification":{"type":"boolean","description":"If notification mails should be sent to the recipients after the transfer is provided.","example":false,"exampleSetFlag":true},"sendUploadSummary":{"type":"boolean","description":"If a confirmation notification mail should be sent to the sender after the transfer is provided.","example":false,"exampleSetFlag":true},"sender":{"$ref":"#/components/schemas/Sender","exampleSetFlag":true},"senderLanguage":{"type":"string","description":"The sender language. Initially, this is set to the value of the 'Accept-Language' header. IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en","exampleSetFlag":true},"showFileNames":{"type":"boolean","description":"If file names should be shown in notification mails.","example":false,"exampleSetFlag":true},"showZipFileContent":{"type":"boolean","description":"If the contents of ZIP files should be shown in notification mails. Has no effect if `showFileNames` is false.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"TransferSessionCreationOptions":{"title":"TransferSessionCreationOptions","type":"object","properties":{"recipients":{"$ref":"#/components/schemas/Recipients","exampleSetFlag":true},"sender":{"$ref":"#/components/schemas/Sender","exampleSetFlag":true}},"exampleSetFlag":true},"TransferSessionFile":{"title":"TransferSessionFile","type":"object","properties":{"checksum":{"type":"string","description":"The checksum of the file.","example":"737b6a930368b34c9ef9022ab088ac9b0b7abf8ef9046929c5d2fea3f87e7d15","exampleSetFlag":true},"fileName":{"type":"string","description":"The name of the file.","example":"Invoice.pdf","exampleSetFlag":true},"href":{"type":"string","description":"The absolute path to the transfer file.","exampleSetFlag":true},"id":{"type":"string","description":"The ID of this file.","example":"a58dFp1Tr7","exampleSetFlag":true},"size":{"type":"integer","description":"The file size in bytes.","format":"int64","example":13987,"exampleSetFlag":true},"state":{"type":"string","description":"The state of this file.","exampleSetFlag":true,"enum":["ACTIVE","INITIALIZED","REMOVED","UPLOADED"]}},"exampleSetFlag":true},"TransferSessionOfobject":{"title":"TransferSessionOfobject","type":"object","properties":{"classificationId":{"type":"string","description":"An optional ID for the type of classification used for this transfer.","exampleSetFlag":true},"confidentialMessageFileId":{"type":"string","description":"The file ID of the confidential message. May be null.","exampleSetFlag":true},"expirationDate":{"type":"string","description":"The expiration date of the transfer. ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"fileChecksumAlgorithm":{"type":"string","description":"The name of the hashing algorithm that will be used for files in this transfer.","example":"SHA256","exampleSetFlag":true},"files":{"uniqueItems":true,"type":"array","description":"The files of this transfer.","exampleSetFlag":true,"items":{"$ref":"#/components/schemas/TransferSessionFile","exampleSetFlag":false}},"notificationMessage":{"description":"The notification mail that will be sent to the recipients.","$ref":"#/components/schemas/TransferNotificationMessage","exampleSetFlag":true},"recipientLanguage":{"type":"string","description":"The recipient language. IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en","exampleSetFlag":true},"recipients":{"$ref":"#/components/schemas/Recipients","exampleSetFlag":true},"securityMode":{"type":"object","description":"The security mode for this transfer.","exampleSetFlag":true},"sendDownloadNotifications":{"type":"boolean","description":"If notification mails should be sent to the sender when a file is downloaded.","example":false,"exampleSetFlag":true},"sendDownloadSummary":{"type":"boolean","description":"If a summary notification mail should be sent to the sender the transfer expires.","example":false,"exampleSetFlag":true},"sendRecipientNotification":{"type":"boolean","description":"If notification mails should be sent to the recipients after the transfer is provided.","example":false,"exampleSetFlag":true},"sendUploadSummary":{"type":"boolean","description":"If a confirmation notification mail should be sent to the sender after the transfer is provided.","example":false,"exampleSetFlag":true},"sender":{"$ref":"#/components/schemas/Sender","exampleSetFlag":true},"senderLanguage":{"type":"string","description":"The sender language. Initially, this is set to the value of the 'Accept-Language' header. IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en","exampleSetFlag":true},"showFileNames":{"type":"boolean","description":"If file names should be shown in notification mails.","example":false,"exampleSetFlag":true},"showZipFileContent":{"type":"boolean","description":"If the contents of ZIP files should be shown in notification mails. Has no effect if `showFileNames` is false.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"TransferSessionPatchable":{"title":"TransferSessionPatchable","type":"object","properties":{"classificationId":{"type":"string","description":"An optional ID for the type of classification used for this transfer.","exampleSetFlag":true},"confidentialMessageFileId":{"type":"string","description":"The file ID of the confidential message. May be null.","exampleSetFlag":true},"expirationDate":{"type":"string","description":"The expiration date of the transfer. ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"fileChecksumAlgorithm":{"type":"string","description":"The name of the hashing algorithm that will be used for files in this transfer.","example":"SHA256","exampleSetFlag":true},"notificationMessage":{"description":"The notification mail that will be sent to the recipients.","$ref":"#/components/schemas/TransferNotificationMessage","exampleSetFlag":true},"recipientLanguage":{"type":"string","description":"The recipient language. IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en","exampleSetFlag":true},"securityMode":{"description":"The security mode for this transfer.","$ref":"#/components/schemas/TransferSecurityModeOfobject","exampleSetFlag":true},"sendDownloadNotifications":{"type":"boolean","description":"If notification mails should be sent to the sender when a file is downloaded.","example":false,"exampleSetFlag":true},"sendDownloadSummary":{"type":"boolean","description":"If a summary notification mail should be sent to the sender the transfer expires.","example":false,"exampleSetFlag":true},"sendRecipientNotification":{"type":"boolean","description":"If notification mails should be sent to the recipients after the transfer is provided.","example":false,"exampleSetFlag":true},"sendUploadSummary":{"type":"boolean","description":"If a confirmation notification mail should be sent to the sender after the transfer is provided.","example":false,"exampleSetFlag":true},"sender":{"$ref":"#/components/schemas/Sender","exampleSetFlag":true},"senderLanguage":{"type":"string","description":"The sender language. Initially, this is set to the value of the 'Accept-Language' header. IETF BCP 47 language tag, RFC 5646. Format: &lt;language&gt;[-&lt;region&gt;]. Case insensitive.","example":"en","exampleSetFlag":true},"showFileNames":{"type":"boolean","description":"If file names should be shown in notification mails.","example":false,"exampleSetFlag":true},"showZipFileContent":{"type":"boolean","description":"If the contents of ZIP files should be shown in notification mails. Has no effect if `showFileNames` is false.","example":false,"exampleSetFlag":true}},"exampleSetFlag":true},"TransferStatus":{"title":"TransferStatus","type":"object","properties":{"status":{"$ref":"#/components/schemas/StatusDto","exampleSetFlag":true},"transfer":{"$ref":"#/components/schemas/TransferSessionOfobject","exampleSetFlag":true}},"exampleSetFlag":true},"VerificationStatus":{"title":"VerificationStatus","type":"object","properties":{"validUntil":{"type":"string","description":"The valid to date of the token. ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true},"verificationMethods":{"uniqueItems":true,"type":"array","description":"A list of available verification methods.","exampleSetFlag":true,"items":{"type":"string","exampleSetFlag":false,"enum":["CLIENT_ID","EMAIL"]}},"verified":{"type":"boolean","description":"The state if the client is verified for the specified email address.","example":true,"exampleSetFlag":true}},"exampleSetFlag":true},"VerificationToken":{"title":"VerificationToken","type":"object","properties":{"token":{"type":"string","description":"The verification token","exampleSetFlag":true},"validUntil":{"type":"string","description":"The valid to date of the token. ISO 8601 with 'T' separator and numeric timezone.","example":"2020-10-09T11:51:46+02:00","exampleSetFlag":true}},"exampleSetFlag":true}},"responses":{"500":{"description":"Server error occurred. \n * 5000 - Service threw an exception that cannot be handled otherwise (e.g. Database error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error","exampleSetFlag":false},"exampleSetFlag":false}}}},"parameters":{"ClientId":{"name":"X-CS-ClientId","in":"header","description":"The ID that uniquely identifies the requesting client. Can also be specified by query parameter (client-id). Should be treated as confidential.","required":true,"schema":{"maxLength":4000,"minLength":50,"pattern":"^[a-zA-Z0-9]+$","type":"string","exampleSetFlag":false}},"MajorVersion":{"name":"X-CS-MajorApiVersion","in":"header","description":"The major version of the API to use. Can also be specified by query parameter (major-api-version).","required":true,"schema":{"minimum":0,"type":"integer","format":"int32","example":1,"exampleSetFlag":true}},"MinimumMinorApiVersion":{"name":"X-CS-MinimumMinorApiVersion","in":"header","description":"The minimum minor version of the API that the client requires. Can also be specified by query parameter (minimum-minor-api-version).","required":true,"schema":{"minimum":0,"type":"integer","format":"int32","example":5,"exampleSetFlag":true}},"ProductKey":{"name":"X-CS-ProductKey","in":"header","description":"The key of the product that the requesting client belongs to. Default is set to 'api.rest'. Can also be specified by query parameter (product-key).","required":false,"schema":{"type":"string","example":"api.rest","exampleSetFlag":true}}},"securitySchemes":{"verification":{"type":"apiKey","description":"Verification token. Can also be specified by query parameter (verification-token).","name":"X-CS-VerificationToken","in":"header"}}}}